{"version":3,"sources":["components/DayListItem.js","components/DayList.js","components/Appointment/Header.js","components/Appointment/Show.js","components/Appointment/Empty.js","components/InterviewerListItem.js","components/InterviewerList.js","components/Button.js","components/Appointment/Form.js","components/Appointment/Status.js","components/Appointment/Confirm.js","components/Appointment/Error.js","hooks/useVisualMode.js","components/Appointment/index.js","reducers/application.js","components/Application.js","hooks/useApplicationData.js","helpers/selectors.js","index.js"],"names":["DayListItem","props","dayClass","classNames","selected","spots","data-testid","className","onClick","setDay","name","DayList","days","map","day","key","id","Header","time","Show","student","interviewer","src","alt","onEdit","onDelete","Empty","onAdd","InterviewerListItem","imgClass","avatar","selectedClass","setInterviewer","InterviewerList","interviewers","value","onChange","Button","buttonClass","confirm","danger","disabled","children","Form","useState","setName","error","setError","cancel","onCancel","autoComplete","onSubmit","e","preventDefault","type","placeholder","target","onSave","Status","message","Confirm","onConfirm","Error","onClose","useVisualMode","initialMode","mode","setMode","history","setHistory","transition","newMode","replace","back","length","push","slice","Appointment","interview","save","bookInterview","then","catch","useEffect","deleteInterview","reducer","state","action","appointments","newDays","Application","useReducer","dispatch","updateData","Promise","all","resolve","axios","get","data","getCurrentDay","dayName","allDays","Object","values","filter","remainingSpots","allAppointments","maxApptID","minApptID","appointment","webSocket","WebSocket","process","REACT_APP_WEBSOCKET_URL","onmessage","event","JSON","parse","close","currentDay","put","delete","useApplicationData","schedule","appointmentsToday","filteredAppointments","forEach","includes","Number","getAppointmentsForDay","getInterview","interviewerList","interviewersToday","filteredInterviewers","getInterviewersForDay","REACT_APP_API_BASE_URL","defaults","baseURL","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8dccfcc.chunk.js","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport \"components/DayListItem.scss\";\n\nexport default function DayListItem(props) {\n  const dayClass = classNames(\"day-list__item\", {\n    \"day-list__item--selected\": props.selected,\n    \"day-list__item--full\": props.spots === 0\n  });\n  \n  const formatSpots = () => {\n    if (props.spots === 0) {\n      return <p>no spots remaining</p>\n    } else if (props.spots === 1) {\n      return <p>1 spot remaining</p>\n      } else if (props.spots) {\n        return <p>{props.spots} spots remaining</p>\n      }\n    };\n\n  return (\n    <div>\n    <li data-testid=\"day\" className={dayClass} onClick={() => props.setDay(props.name)}>\n      <h2 className=\"text--regular\">{props.name}</h2>\n      <h3 className=\"text--light\">{formatSpots()}</h3>\n    </li>\n    </div>\n  );\n};","import React from \"react\";\nimport DayListItem from \"./DayListItem\";\n\nexport default function DayList(props) {\n  \n  return <ul>\n    {props.days.map(day => <DayListItem \n    key={day.id}\n    name={day.name} \n    spots={day.spots} \n    selected={day.name === props.day}\n    setDay={props.setDay}  />\n    )}\n  </ul>\n};","import React from \"react\";\n\nfunction Header(props) {\n  return (\n    <header className=\"appointment__time\">\n      <h4 className=\"text--semi-bold\">{props.time}</h4>\n      <hr className=\"appointment__separator\" />\n    </header>\n  )\n};\n\nexport default Header;","import React from \"react\";\n\nfunction Show(props) {\n  return (\n    <main className=\"appointment__card appointment__card--show\">\n      <section className=\"appointment__card-left\">\n        <h2 className=\"text--regular\">{props.student}</h2>\n        <section className=\"interviewer\">\n          <h4 className=\"text--light\">Interviewer</h4>\n          <h3 className=\"text--regular\">{props.interviewer}</h3>\n        </section>\n      </section>\n      <section className=\"appointment__card-right\">\n        <section className=\"appointment__actions\">\n          <img\n            className=\"appointment__actions-button\"\n            src=\"images/edit.png\"\n            alt=\"Edit\"\n            onClick={props.onEdit}\n          />\n          <img\n            className=\"appointment__actions-button\"\n            src=\"images/trash.png\"\n            alt=\"Delete\"\n            onClick={props.onDelete}\n          />\n        </section>\n      </section>\n    </main>\n  );\n};\n\nexport default Show;","import React from \"react\";\n\nfunction Empty(props) {\n  return (\n    <main className=\"appointment__add\">\n      <img\n        className=\"appointment__add-button\"\n        src=\"images/add.png\"\n        alt=\"Add\"\n        onClick={props.onAdd}\n      />\n    </main>\n  );\n};\n\nexport default Empty;","import React from \"react\";\nimport \"./InterviewerListItem.scss\";\nimport classNames from \"classnames\";\n\nfunction InterviewerListItem(props) {\n  const imgClass = classNames(\"interviewers__item\", {\n    \"interviewers__item-image\": props.avatar\n  });\n\n  const selectedClass = classNames(\"interviewers__item\", {\n    \"interviewers__item--selected\": props.selected \n  })\n\n  return (\n  <li className={selectedClass} onClick={props.setInterviewer}>\n    <img\n      key={props.id}  \n      className={imgClass}\n      src={props.avatar}\n      alt={props.name}\n    />\n    {props.selected && props.name}\n  </li>\n  )\n\n};\n\nexport default InterviewerListItem;","import React from \"react\";\nimport \"./InterviewerList.scss\";\nimport InterviewerListItem from \"./InterviewerListItem\";\nimport PropTypes from 'prop-types';\n\nfunction InterviewerList(props) {\n  InterviewerList.propTypes = {\n    value: PropTypes.number,\n    onChange: PropTypes.func.isRequired\n  }\n\n  return (\n    <section className=\"interviewers\">\n    <h4 className=\"interviewers__header text--light\">Interviewer</h4>\n    <ul className=\"interviewers__list\">\n      {props.interviewers.map(interviewer => <InterviewerListItem \n      key={interviewer.id}\n      avatar={interviewer.avatar}\n      name={interviewer.name}\n      selected={interviewer.id === props.value}\n      setInterviewer={() => props.onChange(interviewer.id)} />)}\n    </ul>\n    </section>\n  )\n};\n\nexport default InterviewerList;","import React from \"react\";\nimport classNames from \"classnames\"\nimport \"components/Button.scss\";\n\nexport default function Button(props) {\n   const buttonClass = classNames(\"button\", {\n      \"button--confirm\": props.confirm,\n      \"button--danger\": props.danger\n   });\n \n   return (\n     <button\n       className={buttonClass}\n       onClick={props.onClick}\n       disabled={props.disabled}\n     >\n       {props.children}\n     </button>\n   );\n }\n","import React, { useState } from \"react\";\nimport InterviewerList from \"components/InterviewerList\";\nimport Button from \"components/Button\";\n\nfunction Form(props) {\n  const [name, setName] = useState(props.name || '');\n  const [interviewer, setInterviewer] = useState(props.interviewer || null);\n  const [error, setError] = useState(\"\");\n\n  function reset() {\n    setName(\"\");\n    setInterviewer(null);\n  };\n  \n  function cancel() {\n    reset()\n    props.onCancel()\n  }\n\n  function validate() {\n    if (name === \"\") {\n      setError(\"Student name cannot be blank\");\n      return;\n    }\n\n    if (interviewer === null) {\n      setError(\"Interviewer cannot be blank\");\n      return;\n    }\n\n    setError(\"\");\n    props.onSave(name, interviewer);\n  }  \n\n  return (\n    <main className=\"appointment__card appointment__card--create\">\n      <section className=\"appointment__card-left\">\n        <form autoComplete=\"off\" onSubmit={e => e.preventDefault()}>\n          <input\n            data-testid=\"student-name-input\"\n            className=\"appointment__create-input text--semi-bold\"\n            name=\"name\"\n            value={name}\n            type=\"text\"\n            placeholder=\"Enter Student Name\"\n            onChange={(e) => setName(e.target.value)}\n          />\n        </form>\n        <section className=\"appointment__validation\">{error}</section>\n        <InterviewerList interviewers={props.interviewers} value={interviewer} onChange={setInterviewer} />\n      </section>\n      <section className=\"appointment__card-right\">\n        <section className=\"appointment__actions\">\n          <Button danger onClick={() => cancel(props)}>Cancel</Button>\n          <Button confirm onClick={() => validate()}>Save</Button>\n        </section>\n      </section>\n    </main>\n  );\n};\n\nexport default Form;","import React from \"react\";\n\nfunction Status(props) {\n  return (\n    <main className=\"appointment__card appointment__card--status\">\n      <img\n        className=\"appointment__status-image\"\n        src=\"images/status.png\"\n        alt=\"Loading\"\n      />\n      <h1 className=\"text--semi-bold\">{props.message}</h1>\n    </main>\n  );\n};\n\nexport default Status;","import React from \"react\";\nimport Button from \"components/Button\";\n\nfunction Confirm(props) {\n  return (\n    <main className=\"appointment__card appointment__card--confirm\">\n      <h1 className=\"text--semi-bold\">{props.message}</h1>\n      <section className=\"appointment__actions\">\n        <Button danger onClick={props.onCancel}>Cancel</Button>\n        <Button danger onClick={props.onConfirm}>Confirm</Button>\n      </section>\n    </main>\n  );\n};\n\nexport default Confirm;","import React from \"react\";\n\nfunction Error(props) {\n  return (\n    <main className=\"appointment__card appointment__card--error\">\n      <section className=\"appointment__error-message\">\n        <h1 className=\"text--semi-bold\">Error</h1>\n        <h3 className=\"text--light\">{props.message}</h3>\n      </section>\n      <img\n        className=\"appointment__error-close\"\n        src=\"images/close.png\"\n        alt=\"Close\"\n        onClick={props.onClose}\n      />\n    </main>\n  );\n};\n\nexport default Error;","import { useState } from 'react';\n\nconst useVisualMode = (initialMode) => {\n  const [mode, setMode] = useState(initialMode);\n  const [history, setHistory] = useState([]);\n\n  function transition(newMode, replace) {\n    if (!replace) {\n      setHistory([...history, mode]);\n    }\n    setMode(newMode);\n  }\n\n  function back() {\n    if (history.length === 0) {\n      history.push(\"EMPTY\");\n    }\n\n    if (history.length >= 1) {\n      setMode(history[history.length - 1]);\n      setHistory([...history.slice(0, -1)]);\n    }\n  }\n\n  return { transition, mode, back };\n}\n\nexport default useVisualMode;","import React, { useEffect } from \"react\";\nimport \"./styles.scss\";\nimport Header from \"./Header\";\nimport Show from \"./Show\";\nimport Empty from \"./Empty\";\nimport Form from \"./Form\";\nimport Status from \"./Status\";\nimport Confirm from \"./Confirm\";\nimport Error from \"./Error\";\nimport useVisualMode from \"hooks/useVisualMode\";\n\nfunction Appointment(props) {\n  const EMPTY = \"EMPTY\";\n  const SHOW = \"SHOW\";\n  const CREATE = \"CREATE\";\n  const SAVING = \"SAVING\";\n  const DELETING = \"DELETING\";\n  const CONFIRM = \"CONFRIM\";\n  const EDIT = \"EDIT\";\n  const ERROR_SAVE = \"ERROR_SAVE\";\n  const ERROR_DELETE = \"ERROR_DELETE\";\n  const { mode, transition, back } = useVisualMode(\n    props.interview ? SHOW : EMPTY\n  );\n   \n  function save(name, interviewer) {\n    const interview = {\n      student: name,\n      interviewer\n    };\n\n    transition(SAVING, true);\n\n    props\n      .bookInterview(props.id, interview)\n      .then(() => transition(SHOW))\n      .catch(() => transition(ERROR_SAVE, true));\n  };\n\n  function confirmDelete() {\n    transition(CONFIRM, true);\n  };\n\n  function removeInterview() {\n    transition(DELETING, true);\n\n    props\n      .deleteInterview(props.id)\n      .then(() => transition(EMPTY))\n      .catch(e => transition(ERROR_DELETE, true));\n  };\n\n  useEffect(() => {\n    if (props.interview && mode === EMPTY) {\n      transition(SHOW);\n    }\n    if (props.interview === null && mode === SHOW) {\n      transition(EMPTY);\n    }\n  }, [props.interview, transition, mode]);\n\n  return (\n    <article data-testid=\"appointment\" className=\"appointment\">\n      <Header time={props.time} />\n      {mode === SHOW && props.interview && (\n        <Show\n          student={props.interview.student}\n          interviewer={props.interview.interviewer.name}\n          onDelete={confirmDelete}\n          onEdit={() => transition(EDIT)}\n        />\n      )}\n      {mode === EMPTY && <Empty onAdd={() => transition(CREATE)} />}\n      {mode === CREATE && <Form interviewers={props.interviewers} onCancel={back} onSave={save} />}\n      {mode === SAVING && <Status message=\"Saving Interview\" />}\n      {mode === DELETING && <Status message=\"Deleting Interview\" />}\n      {mode === CONFIRM && <Confirm message=\"Are you sure you would like to delete?\" onConfirm={removeInterview} onCancel={back} />}\n      {mode === EDIT && <Form interviewers={props.interviewers} name={props.interview.student} interviewer={props.interview.interviewer.id} onCancel={back} onSave={save} />}\n      {mode === ERROR_SAVE && <Error message=\"There was an error saving your interview.\" onClose={back} />}\n      {mode === ERROR_DELETE && <Error message=\"There was an error deleting your interview.\" onClose={back} />}\n    </article>\n  )\n};\n\nexport default Appointment;","const SET_DAY = \"SET_DAY\";\nconst SET_APPLICATION_DATA = \"SET_APPLICATION_DATA\";\nconst SET_INTERVIEW = \"SET_INTERVIEW\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case SET_DAY:\n      return {...state, day: action.day};\n    case SET_APPLICATION_DATA:\n      return {...state, days: action.days, appointments: action.appointments, interviewers: action.interviewers};\n    case SET_INTERVIEW: {\n      const { newDays, appointments } = action;\n      return {...state, appointments, newDays};\n    }\n    default:\n      throw new Error(\n        `Tried to reduce with unsupported action type: ${action.type}`\n      );\n  }\n};\n\nexport default reducer;\nexport { SET_DAY, SET_APPLICATION_DATA, SET_INTERVIEW };","import React from \"react\";\n\nimport \"components/Application.scss\";\nimport DayList from \"./DayList\";\nimport Appointment from \"components/Appointment/index\";\nimport { getAppointmentsForDay, getInterview, getInterviewersForDay } from \"../helpers/selectors\";\nimport useApplicationData from \"hooks/useApplicationData\";\n\nexport default function Application(props) {\n  const {\n    state,\n    setDay,\n    bookInterview,\n    deleteInterview\n  } = useApplicationData();\n  \n  const appointments = getAppointmentsForDay(state, state.day)\n  \n  const schedule = appointments.map((appointment) => {\n    const interview = getInterview(state, appointment.interview);\n    const interviewerList = getInterviewersForDay(state, state.day)\n\n    return (\n      <Appointment\n        key={appointment.id}\n        id={appointment.id}\n        time={appointment.time}\n        interview={interview}\n        bookInterview={bookInterview}\n        deleteInterview={deleteInterview}\n        interviewers={interviewerList}\n      />\n    );\n  });\n\n  return (\n    <main className=\"layout\">\n      <section className=\"sidebar\">\n        <img\n          className=\"sidebar--centered\"\n          src=\"images/logo.png\"\n          alt=\"Interview Scheduler\"\n        />\n        <hr className=\"sidebar__separator sidebar--centered\" />\n        <nav className=\"sidebar__menu\"><DayList\n          days={state.days}\n          day={state.day}\n          setDay={setDay}\n        />\n        </nav>\n        <img\n          className=\"sidebar__lhl sidebar--centered\"\n          src=\"images/lhl.png\"\n          alt=\"Lighthouse Labs\"\n        />\n      </section>\n      <section className=\"schedule\">\n        {schedule}\n        <Appointment key=\"last\" time=\"5pm\" /> \n      </section>\n    </main>\n  );\n};","import { useEffect, useReducer } from \"react\";\nimport axios from \"axios\";\nimport reducer, {\n  SET_DAY,\n  SET_APPLICATION_DATA,\n  SET_INTERVIEW\n} from \"reducers/application\";\n\nexport default function useApplicationData() {\n  const [state, dispatch] = useReducer(reducer, {\n    day: \"Monday\",\n    days: [],\n    appointments: {},\n    interviewers: {}\n  });\n\n  function updateData() {\n   return Promise.all([\n      Promise.resolve(axios.get('/api/days')),\n      Promise.resolve(axios.get('/api/appointments')),\n      Promise.resolve(axios.get('/api/interviewers'))\n    ]).then((all) => {\n      dispatch({ type: SET_APPLICATION_DATA, days: all[0].data, appointments: all[1].data, interviewers: all[2].data });\n    });\n  }\n\n  useEffect(() => {\n    const webSocket = new WebSocket(process.env.REACT_APP_WEBSOCKET_URL);\n\n    webSocket.onmessage = function (event) {\n      const data = JSON.parse(event.data);\n      \n      if (data.type === SET_INTERVIEW) {\n        return updateData()\n      }\n    };\n\n      updateData()\n      return () => webSocket.close();\n  }, []);\n  \n  const setDay = day => {dispatch({ type: SET_DAY, day})};\n\n  function getCurrentDay(dayName, allDays) {\n    return Object.values(allDays).filter(day => day.name === dayName)[0];\n  };\n\n  function remainingSpots(dayName, allDays, allAppointments) {\n    const currentDay = getCurrentDay(dayName, allDays);\n    const maxApptID = currentDay.id * 5;\n    const minApptID = maxApptID - 4;\n    const spotsRemaining = Object.values(allAppointments)\n    .filter(\n      appointment => appointment.id >= minApptID \n      && appointment.id <= maxApptID \n      && appointment.interview === null\n      ).length;\n\n    return spotsRemaining;\n  };\n\n  function bookInterview(id, interview) {\n    const appointment = {\n      ...state.appointments[id],\n      interview: { ...interview }\n    };\n\n    const appointments = {\n      ...state.appointments,\n      [id]: appointment\n    };\n    \n    const currentDay = getCurrentDay(state.day, state.days);\n    currentDay.spots = remainingSpots(state.day, state.days, appointments);\n\n    const newDays = {\n      ...state.days,\n      ...currentDay.spots\n    };\n\n    return axios.put(`api/appointments/${id}`, {interview})\n      .then(() => dispatch({ type: SET_INTERVIEW, appointments, newDays}));\n  };\n\n  function deleteInterview(id) {\n    const appointment = {\n      ...state.appointments[id],\n      interview: null\n    };\n\n    const appointments = {\n      ...state.appointments,\n      [id]: appointment\n    };\n\n    const currentDay = getCurrentDay(state.day, state.days);\n    currentDay.spots = remainingSpots(state.day, state.days, appointments);\n    \n    const newDays = {\n      ...state.days,\n      ...currentDay.spots\n    };\n    \n    return axios.delete(`api/appointments/${id}`)\n      .then(() => dispatch({ type: SET_INTERVIEW, appointments, newDays}));\n  };\n\n  return {\n    state,\n    setDay,\n    bookInterview,\n    deleteInterview\n  }\n};","const getAppointmentsForDay = (state, dayName) => {\n  let appointmentsToday;\n  let filteredAppointments = [];\n\n  state.days.forEach(day => {\n    if (day.name === dayName) {\n      appointmentsToday = day.appointments\n    }\n  });\n\n  for (const appointment in state.appointments) {\n    if (!appointmentsToday) {\n      return [];\n    } else if(appointmentsToday.includes(Number(appointment))) {\n      filteredAppointments.push(state.appointments[appointment])\n    }\n  }\n\n  return filteredAppointments\n};\n\nconst getInterview = (state, interview) => {\n  if (!interview) return null;\n\n  const studentAndInterviewer = {\n    interviewer: state.interviewers[interview.interviewer],\n    student: interview.student\n  }\n\n  return studentAndInterviewer;\n};\n\nconst getInterviewersForDay = (state, dayName) => {\n  let interviewersToday;\n  let filteredInterviewers = [];\n\n  state.days.forEach(day => {\n    if (day.name === dayName) {\n      interviewersToday = day.interviewers\n    }\n  });\n\n  for (const interviewer in state.interviewers) {\n    if (!interviewersToday) {\n      return [];\n    } else if(interviewersToday.includes(Number(interviewer))) {\n      filteredInterviewers.push(state.interviewers[interviewer])\n    }\n  }\n\n  return filteredInterviewers\n};\n\nexport { getAppointmentsForDay, getInterview, getInterviewersForDay };","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"index.scss\";\nimport Application from \"components/Application\";\nimport axios from \"axios\";\n\nif (process.env.REACT_APP_API_BASE_URL) {\n  axios.defaults.baseURL = process.env.REACT_APP_API_BASE_URL;\n}\n\nReactDOM.render(<Application />, document.getElementById(\"root\"));\n"],"sourceRoot":""}